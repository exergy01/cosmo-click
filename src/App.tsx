import React, { useState, useEffect } from 'react';
import './App.css';

function App() {
  const [activeTab, setActiveTab] = useState("bottom-rocket");
  const [isPortrait, setIsPortrait] = useState(window.matchMedia("(orientation: portrait)").matches);

  useEffect(() => {
    const mediaQuery = window.matchMedia("(orientation: portrait)");
    const handler = () => setIsPortrait(mediaQuery.matches);
    mediaQuery.addEventListener("change", handler);
    return () => mediaQuery.removeEventListener("change", handler);
  }, []);

  if (!isPortrait) {
    return (
      <div className="rotate-warning">
        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤–µ—Ä–Ω–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ üì±
      </div>
    );
  }

  const mainMenuItems: MenuItem[] = [
    { id: "main-resources", label: "–†–ï–°–£–†–°–´", value: 0 },
    { id: "main-drones", label: "–î–†–û–ù–´", value: 5 },
    { id: "main-cargo", label: "–ö–ê–†–ì–û", value: 300 },
  ];

  const actionMenuItems: MenuItem[] = [
    { id: "action-attack", label: "–ê–¢–ê–ö–ê" },
    { id: "action-exchange", label: "–û–ë–ú–ï–ù" },
    { id: "action-quests", label: "–ó–ê–î–ê–ù–ò–Ø" },
  ];

  const bottomMenuItems: BottomMenuItem[] = [
    { id: "bottom-games", icon: "üéÆ" },
    { id: "bottom-wallet", icon: "üí≥" },
    { id: "bottom-rocket", icon: "üöÄ" },
    { id: "bottom-friends", icon: "üë•" },
    { id: "bottom-guide", icon: "üìñ" },
  ];

  interface MenuItem {
    id: string;
    label: string;
    value?: number;
  }

  interface BottomMenuItem {
    id: string;
    icon: string;
  }

  const TopBar = () => (
    <div className="top-bar">
      <div className="currency neon-border">
        <span className="label">CCC:</span>
        <span className="value">123 456</span>
        <div className="subtext">+5200 –≤ —á–∞—Å</div>
      </div>
      <div className="currency neon-border">
        <span className="label">CS:</span>
        <span className="value">89</span>
        <div className="subtext">–ö—É—Ä—Å: 1 CS = 10000 CCC</div>
      </div>
    </div>
  );

  const MainContent = () => (
    <>
      <div className="menu-buttons">
        {mainMenuItems.map((item: MenuItem) => (
          <div
            key={item.id}
            className={`menu-button neon-border ${activeTab === item.id ? 'active' : ''}`}
            onClick={() => setActiveTab(item.id)}
          >
            {item.label}
            <div className="menu-value">{item.value}</div>
          </div>
        ))}
      </div>
      <div className="star-system" onClick={() => alert("–í—ã–±–æ—Ä –∑–≤—ë–∑–¥–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!")}>
        ‚≠ê –ó–≤—ë–∑–¥–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: –ê–Ω–¥—Ä–æ–º–µ–¥–∞ I
      </div>
      <div className="images-block">
        <img src={`${process.env.PUBLIC_URL}/images/space_bot_1.png`} alt="–î—Ä–æ–Ω" className="drone-image" />
        <img src={`${process.env.PUBLIC_URL}/images/seif.png`} alt="–°–µ–π—Ñ" className="seif-image" />
      </div>
      <div className="action-menu">
        {actionMenuItems.map((item: MenuItem) => (
          <div
            key={item.id}
            className={`menu-button neon-border ${activeTab === item.id ? 'active' : ''}`}
            onClick={() => setActiveTab(item.id)}
          >
            {item.label}
          </div>
        ))}
      </div>
    </>
  );

  const TabContent = ({ tabId }: { tabId: string }) => {
    switch (tabId) {
      case "main-resources":
        return (
          <div className="tab-content">
            <h2>–ú–∞–≥–∞–∑–∏–Ω</h2>
            <p>–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –º–∞–≥–∞–∑–∏–Ω —Ä–µ—Å—É—Ä—Å–æ–≤.</p>
          </div>
        );
      case "main-drones":
        return (
          <div className="tab-content">
            <h2>–î—Ä–æ–Ω—ã</h2>
            <p>–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –¥—Ä–æ–Ω–æ–≤ –±—É–¥–µ—Ç –∑–¥–µ—Å—å.</p>
          </div>
        );
      case "main-cargo":
        return (
          <div className="tab-content">
            <h2>–ö–∞—Ä–≥–æ</h2>
            <p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–∑–∞—Ö —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è.</p>
          </div>
        );
      case "action-attack":
        return (
          <div className="tab-content">
            <h2 style={{ color: 'white', textAlign: 'center' }}>–í —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</h2>
          </div>
        );
      case "action-exchange":
        return (
          <div className="tab-content">
            <h2>–û–±–º–µ–Ω</h2>
            <p>–û–±–º–µ–Ω –≤–∞–ª—é—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–∑–∂–µ.</p>
          </div>
        );
      case "action-quests":
        return (
          <div className="tab-content">
            <h2>–ó–∞–¥–∞–Ω–∏—è</h2>
            <p>–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.</p>
          </div>
        );
      case "bottom-games":
        return (
          <div className="game-icons">
            <span className="game-icon">üéØ</span>
            <span className="game-icon">üïπÔ∏è</span>
            <span className="game-icon">üß©</span>
            <span className="game-icon">üé≤</span>
            <span className="game-icon">üèÜ</span>
          </div>
        );
      case "bottom-wallet":
        return (
          <div className="tab-content">
            <h2>–ö–æ—à–µ–ª—ë–∫</h2>
            <p>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ.</p>
          </div>
        );
      case "bottom-friends":
        return (
          <div className="tab-content">
            <h2>–î—Ä—É–∑—å—è</h2>
            <p>–°–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω.</p>
          </div>
        );
      case "bottom-guide":
        return (
          <div className="tab-content">
            <h2>–ì–∞–π–¥</h2>
            <p>–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ.</p>
          </div>
        );
      default:
        return <div className="tab-content">–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞</div>;
    }
  };

  const renderContent = () => {
    if (activeTab === "bottom-rocket") {
      return <MainContent />;
    }
    return <TabContent tabId={activeTab} />;
  };

  return (
    <div className="App">
      <TopBar />
      {renderContent()}
      <div className="bottom-menu">
        {bottomMenuItems.map((item: BottomMenuItem) => (
          <button
            key={item.id}
            className={`neon-icon-button ${activeTab === item.id ? 'active' : ''}`}
            onClick={() => setActiveTab(item.id)}
          >
            {item.icon}
          </button>
        ))}
      </div>
    </div>
  );
}

export default App;